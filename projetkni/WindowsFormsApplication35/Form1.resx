<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>